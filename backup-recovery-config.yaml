# ROOTUIP Backup and Disaster Recovery Configuration
# Enterprise-grade backup policies and recovery procedures

backup:
  # PostgreSQL backup configuration
  postgresql:
    continuous_replication:
      enabled: true
      interval: 5m  # WAL streaming interval
      retention: 7d  # Keep 7 days of WAL files
      regions:
        - name: us-east-1
          primary: true
          connection: ${DATABASE_URL}
        - name: us-west-2
          standby: true
          connection: ${DATABASE_URL_SECONDARY}
          lag_threshold: 1MB
        - name: eu-west-1
          standby: true
          connection: ${DATABASE_URL_TERTIARY}
          lag_threshold: 5MB
    
    full_backup:
      enabled: true
      schedule: "0 * * * *"  # Hourly
      retention:
        daily: 7
        weekly: 4
        monthly: 12
        yearly: 5
      encryption:
        enabled: true
        algorithm: AES-256-GCM
      compression:
        enabled: true
        level: 9
      storage:
        primary: s3://rootuip-backups/postgresql/
        secondary: glacier://rootuip-archive/postgresql/
    
    point_in_time_recovery:
      enabled: true
      window: 30d  # Can restore to any point in last 30 days
  
  # Redis backup configuration
  redis:
    snapshot:
      enabled: true
      interval: 15m
      retention: 24h
      storage: s3://rootuip-backups/redis/
    
    aof:
      enabled: true
      sync_policy: everysec
      rewrite_threshold: 100MB
      retention: 7d
    
    cluster:
      nodes: 3
      replicas_per_master: 2
      automatic_failover: true
      failover_timeout: 30s
  
  # Document storage backup
  documents:
    incremental:
      enabled: true
      interval: 30m
      retention: 90d
    
    versioning:
      enabled: true
      max_versions: 100
      retention: 1y
    
    deduplication:
      enabled: true
      algorithm: SHA-256
    
    storage:
      primary: s3://rootuip-documents/
      archive: glacier://rootuip-document-archive/
  
  # Configuration backup
  configuration:
    schedule: "0 0 * * *"  # Daily at midnight
    include:
      - /etc/rootuip/
      - /var/lib/rootuip/config/
      - environment_variables
      - kubernetes_configmaps
      - terraform_state
    exclude:
      - "*.log"
      - "*.tmp"
      - ".git"
    encryption:
      enabled: true
      key_rotation: 90d

disaster_recovery:
  # Recovery objectives by service tier
  service_tiers:
    tier_1:  # Critical services
      services:
        - authentication
        - container_tracking
        - api_gateway
      rto: 5m    # Recovery Time Objective
      rpo: 1m    # Recovery Point Objective
      priority: critical
    
    tier_2:  # Important services
      services:
        - reporting
        - analytics
        - document_processing
      rto: 15m
      rpo: 5m
      priority: high
    
    tier_3:  # Non-critical services
      services:
        - bulk_export
        - historical_data
        - training_modules
      rto: 1h
      rpo: 15m
      priority: medium
  
  # Multi-region configuration
  regions:
    primary:
      name: us-east-1
      provider: aws
      zone: us-east-1a,us-east-1b,us-east-1c
      endpoints:
        api: https://api-east.rootuip.com
        database: postgres://east.db.rootuip.com:5432
    
    secondary:
      name: us-west-2
      provider: aws
      zone: us-west-2a,us-west-2b,us-west-2c
      endpoints:
        api: https://api-west.rootuip.com
        database: postgres://west.db.rootuip.com:5432
    
    tertiary:
      name: eu-west-1
      provider: aws
      zone: eu-west-1a,eu-west-1b,eu-west-1c
      endpoints:
        api: https://api-eu.rootuip.com
        database: postgres://eu.db.rootuip.com:5432
  
  # Failover configuration
  failover:
    automatic:
      enabled: true
      health_check_interval: 10s
      failure_threshold: 3
      recovery_threshold: 2
    
    manual:
      require_approval: true
      approvers:
        - oncall@rootuip.com
        - cto@rootuip.com
    
    dns:
      provider: route53
      ttl: 60s
      health_checks:
        - endpoint: /health
          interval: 30s
          timeout: 10s
  
  # Data synchronization
  data_sync:
    mode: async  # async, sync, semi-sync
    replication_lag_threshold: 5s
    conflict_resolution: last_write_wins
    compression: true
    bandwidth_limit: 100MB/s

business_continuity:
  # Service degradation modes
  degraded_modes:
    read_only:
      trigger: database_failure
      features_disabled:
        - write_operations
        - bulk_imports
        - report_generation
    
    cache_only:
      trigger: high_latency
      cache_ttl: 3600s
      stale_data_allowed: true
    
    essential_only:
      trigger: major_outage
      services_enabled:
        - authentication
        - container_tracking_read
        - emergency_support
  
  # Customer communication
  communication:
    channels:
      - status_page
      - email
      - sms
      - webhook
    
    templates:
      incident_start: |
        We are currently experiencing issues with {{service}}.
        Our team is actively working on resolution.
        Current impact: {{impact}}
        
      incident_update: |
        Update on {{service}} issue:
        Status: {{status}}
        Progress: {{progress}}
        ETA: {{eta}}
        
      incident_resolved: |
        The issue with {{service}} has been resolved.
        Duration: {{duration}}
        Root cause: {{root_cause}}
  
  # SLA monitoring
  sla_targets:
    uptime: 99.99%  # 4.38 minutes downtime per month
    response_time: 200ms
    error_rate: 0.01%
    
  sla_credits:
    - threshold: 99.9%
      credit: 10%
    - threshold: 99.0%
      credit: 25%
    - threshold: 95.0%
      credit: 50%
    - threshold: 90.0%
      credit: 100%

testing:
  # Disaster recovery testing
  dr_tests:
    schedule: quarterly
    scenarios:
      - database_failure
      - region_failure
      - service_degradation
      - data_corruption
    
    validation:
      - data_integrity
      - service_availability
      - performance_metrics
      - customer_impact
  
  # Backup testing
  backup_tests:
    schedule: monthly
    restore_targets:
      - test_environment
      - isolated_vpc
    
    validation:
      - data_completeness
      - application_functionality
      - performance_comparison

monitoring:
  # Backup monitoring
  backup_monitoring:
    alerts:
      - metric: backup_failure
        threshold: 1
        severity: critical
      - metric: backup_duration
        threshold: 2h
        severity: warning
      - metric: backup_size_anomaly
        threshold: 50%
        severity: warning
  
  # DR monitoring
  dr_monitoring:
    health_checks:
      - name: database_replication
        interval: 1m
        timeout: 30s
      - name: regional_connectivity
        interval: 5m
        timeout: 60s
      - name: backup_accessibility
        interval: 1h
        timeout: 5m
    
    dashboards:
      - backup_status
      - replication_lag
      - regional_health
      - sla_compliance

compliance:
  # Compliance requirements
  standards:
    - SOC2_Type_II
    - ISO_27001
    - GDPR
    - HIPAA
  
  # Audit logging
  audit:
    backup_access:
      enabled: true
      retention: 7y
    
    recovery_operations:
      enabled: true
      detailed_logging: true
      retention: 7y
  
  # Data retention policies
  retention:
    customer_data:
      active: indefinite
      deleted: 90d
      backups: 7y
    
    system_logs:
      application: 90d
      security: 1y
      audit: 7y