class SearchSystem{constructor(){this.searchEngine=new SearchEngine,this.filterEngine=new FilterEngine,this.nlpProcessor=new NLPSearchProcessor,this.indexer=new SearchIndexer,this.cache=new SearchCache,this.analytics=new SearchAnalytics,this.initialized=!1}async initialize(){console.log("Initializing UIP Search System..."),await Promise.all([this.searchEngine.initialize(),this.filterEngine.initialize(),this.nlpProcessor.initialize(),this.indexer.initialize(),this.cache.initialize(),this.analytics.initialize()]),await this.buildSearchIndex(),this.initialized=!0,console.log("Search System initialized successfully")}async buildSearchIndex(){console.log("Building search index...");const e=[...await this.indexContainers(),...await this.indexShipments(),...await this.indexDocuments(),...await this.indexCarriers(),...await this.indexPorts(),...await this.indexInvoices(),...await this.indexBookings()];await this.indexer.buildIndex(e),console.log(`Search index built with ${e.length} items`)}async search(e,t={}){if(!this.initialized)throw new Error("Search System not initialized");const r=this.generateSearchId(),i=Date.now();try{const a=this.cache.generateKey(e,t),s=await this.cache.get(a);if(s&&!t.fresh)return await this.analytics.recordSearch(r,e,s,!0),s;const n=await this.nlpProcessor.process(e),c=await this.searchEngine.search(n,t),o=await this.filterEngine.apply(c,t.filters),l=await this.enhanceResults(o,t);return await this.cache.set(a,l),await this.analytics.recordSearch(r,e,l,!1),{searchId:r,query:e,processedQuery:n,results:l,total:l.length,searchTime:Date.now()-i,suggestions:await this.generateSuggestions(e,l)}}catch(t){throw console.error("Search failed:",t),await this.analytics.recordError(r,e,t),t}}async advancedSearch(e,t={}){const r=[];Object.entries(e).forEach(([e,t])=>{t&&t.trim()&&r.push(`${e}:${t}`)});const i=r.join(" AND ");return await this.search(i,{...t,advanced:!0,criteria:e})}async facetedSearch(e,t=[],r={}){const i=await this.search(e,r),a={};for(const e of t)a[e]=await this.calculateFacets(i.results,e);return{...i,facets:a}}async generateSuggestions(e,t){const r=[],i=(await this.analytics.getCommonQueries()).filter(t=>t.toLowerCase().includes(e.toLowerCase())&&t!==e).slice(0,3);if(r.push(...i.map(e=>({type:"query",text:e,description:"Popular search"}))),t.length>0){const e=[...new Set(t.map(e=>e.carrier).filter(Boolean))],i=[...new Set(t.map(e=>e.port).filter(Boolean))];e.slice(0,2).forEach(e=>{r.push({type:"filter",text:`carrier:${e}`,description:`Filter by ${e}`})}),i.slice(0,2).forEach(e=>{r.push({type:"filter",text:`port:${e}`,description:`Filter by ${e}`})})}const a=await this.getAutoComplete(e);return r.push(...a),r.slice(0,8)}async getAutoComplete(e){return(await this.indexer.getTerms(e)).map(e=>({type:"autocomplete",text:e,description:"Auto-complete"}))}async indexContainers(){return(await this.fetchContainers()).map(e=>({id:e.id,type:"container",title:`Container ${e.number}`,content:`${e.number} ${e.carrier} ${e.status} ${e.origin} ${e.destination}`,searchableFields:{containerNumber:e.number,carrier:e.carrier,status:e.status,origin:e.origin,destination:e.destination,vessel:e.vessel,voyage:e.voyage},metadata:{created:e.created,updated:e.updated,priority:e.priority||"normal"},data:e}))}async indexShipments(){return(await this.fetchShipments()).map(e=>({id:e.id,type:"shipment",title:`Shipment ${e.number}`,content:`${e.number} ${e.carrier} ${e.status} ${e.shipper} ${e.consignee}`,searchableFields:{shipmentNumber:e.number,carrier:e.carrier,status:e.status,shipper:e.shipper,consignee:e.consignee,blNumber:e.blNumber},metadata:{created:e.created,updated:e.updated,value:e.value},data:e}))}async indexDocuments(){return(await this.fetchDocuments()).map(e=>({id:e.id,type:"document",title:e.name,content:`${e.name} ${e.type} ${e.extractedText||""}`,searchableFields:{documentName:e.name,documentType:e.type,extractedText:e.extractedText,blNumber:e.blNumber,containerNumber:e.containerNumber},metadata:{created:e.created,size:e.size,confidence:e.confidence},data:e}))}async indexCarriers(){return(await this.fetchCarriers()).map(e=>({id:e.id,type:"carrier",title:e.name,content:`${e.name} ${e.code} ${e.description||""}`,searchableFields:{carrierName:e.name,carrierCode:e.code,services:e.services?.join(" ")||"",routes:e.routes?.join(" ")||""},metadata:{active:e.active,rating:e.rating},data:e}))}async indexPorts(){return(await this.fetchPorts()).map(e=>({id:e.id,type:"port",title:`${e.name} (${e.code})`,content:`${e.name} ${e.code} ${e.country} ${e.region}`,searchableFields:{portName:e.name,portCode:e.code,country:e.country,region:e.region,city:e.city},metadata:{latitude:e.latitude,longitude:e.longitude,timezone:e.timezone},data:e}))}async indexInvoices(){return(await this.fetchInvoices()).map(e=>({id:e.id,type:"invoice",title:`Invoice ${e.number}`,content:`${e.number} ${e.supplier} ${e.customer} ${e.amount}`,searchableFields:{invoiceNumber:e.number,supplier:e.supplier,customer:e.customer,amount:e.amount,currency:e.currency,status:e.status},metadata:{created:e.created,dueDate:e.dueDate,paid:e.paid},data:e}))}async indexBookings(){return(await this.fetchBookings()).map(e=>({id:e.id,type:"booking",title:`Booking ${e.number}`,content:`${e.number} ${e.carrier} ${e.shipper} ${e.origin} ${e.destination}`,searchableFields:{bookingNumber:e.number,carrier:e.carrier,shipper:e.shipper,origin:e.origin,destination:e.destination,commodity:e.commodity},metadata:{created:e.created,sailingDate:e.sailingDate,confirmed:e.confirmed},data:e}))}async fetchContainers(){return[{id:"c1",number:"MSKU1234567",carrier:"Maersk",status:"In Transit",origin:"Shanghai",destination:"Los Angeles",vessel:"Maersk Edinburg",voyage:"124E",created:"2024-03-10",updated:"2024-03-15"},{id:"c2",number:"MSCU9876543",carrier:"MSC",status:"Delivered",origin:"Rotterdam",destination:"New York",vessel:"MSC Isabella",voyage:"247W",created:"2024-03-08",updated:"2024-03-14"}]}async fetchShipments(){return[{id:"s1",number:"SH001234",carrier:"Maersk",status:"Active",shipper:"ABC Trading Co",consignee:"XYZ Import Corp",blNumber:"MAEU123456789",created:"2024-03-10",updated:"2024-03-15",value:125e3}]}async fetchDocuments(){return[{id:"d1",name:"Bill of Lading - MAEU123456789.pdf",type:"bill_of_lading",extractedText:"Bill of Lading MAEU123456789 Maersk Edinburg Shanghai Los Angeles",blNumber:"MAEU123456789",containerNumber:"MSKU1234567",created:"2024-03-10",size:245760,confidence:.97}]}async fetchCarriers(){return[{id:"cr1",name:"Maersk",code:"MAEU",description:"A.P. Moller - Maersk",services:["Ocean Freight","Inland Transport","Customs"],routes:["Asia-Europe","Trans-Pacific","Trans-Atlantic"],active:!0,rating:4.5},{id:"cr2",name:"MSC",code:"MSCU",description:"Mediterranean Shipping Company",services:["Ocean Freight","Terminal Operations"],routes:["Europe-Asia","Americas","Africa"],active:!0,rating:4.2}]}async fetchPorts(){return[{id:"p1",name:"Port of Los Angeles",code:"USLAX",country:"United States",region:"North America",city:"Los Angeles",latitude:33.7447,longitude:-118.2589,timezone:"America/Los_Angeles"},{id:"p2",name:"Port of Shanghai",code:"CNSHA",country:"China",region:"Asia",city:"Shanghai",latitude:31.2304,longitude:121.4737,timezone:"Asia/Shanghai"}]}async fetchInvoices(){return[{id:"i1",number:"INV-2024-001234",supplier:"Global Freight Solutions",customer:"ABC Trading Co",amount:15750,currency:"USD",status:"Paid",created:"2024-03-10",dueDate:"2024-04-10",paid:!0}]}async fetchBookings(){return[{id:"b1",number:"BK123456789",carrier:"Maersk",shipper:"ABC Trading Co",origin:"Shanghai",destination:"Los Angeles",commodity:"Electronics",created:"2024-03-05",sailingDate:"2024-03-15",confirmed:!0}]}async enhanceResults(e,t){const r=e.map(e=>({...e,relevanceScore:this.calculateRelevance(e,t.query)}));r.sort((e,t)=>t.relevanceScore-e.relevanceScore);for(const e of r)e.related=await this.findRelatedItems(e);return r}calculateRelevance(e,t){let r=0;const i=t.toLowerCase();if(e.title.toLowerCase().includes(i)&&(r+=100),Object.values(e.searchableFields).forEach(e=>{e&&e.toString().toLowerCase().includes(i)&&(r+=50)}),e.content.toLowerCase().includes(i)&&(r+=25),e.metadata.updated){(Date.now()-new Date(e.metadata.updated).getTime())/864e5<7&&(r+=10)}return r}async findRelatedItems(e){const t=[];if(e.searchableFields.containerNumber){const r=await this.search(`containerNumber:${e.searchableFields.containerNumber}`);t.push(...r.results.filter(t=>t.id!==e.id).slice(0,3))}if(e.searchableFields.blNumber){const r=await this.search(`blNumber:${e.searchableFields.blNumber}`);t.push(...r.results.filter(t=>t.id!==e.id).slice(0,3))}return t.slice(0,5)}async calculateFacets(e,t){const r={};return e.forEach(e=>{const i=e.searchableFields[t]||e.data[t];i&&(r[i]=(r[i]||0)+1)}),Object.entries(r).sort(([,e],[,t])=>t-e).slice(0,10).map(([e,t])=>({value:e,count:t}))}generateSearchId(){return`search_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}}class SearchEngine{constructor(){this.index=new Map,this.termIndex=new Map}async initialize(){console.log("Initializing Search Engine...")}async search(e,t={}){const{terms:r,filters:i,operators:a}=e;let s=[];if(0===r.length)return[];for(const e of r){const t=this.searchTerm(e);s.push(...t)}const n=this.mergeResults(s);return this.sortResults(n,t.sort||"relevance")}searchTerm(e){const t=[];for(const[r,i]of this.index.entries()){const r=this.calculateTermScore(e,i);r>0&&t.push({...i,score:r})}return t}calculateTermScore(e,t){let r=0;const i=e.toLowerCase();return t.title.toLowerCase().includes(i)&&(r+=100),Object.values(t.searchableFields).forEach(e=>{e&&e.toString().toLowerCase().includes(i)&&(r+=50)}),t.content.toLowerCase().includes(i)&&(r+=25),r}mergeResults(e){const t=new Map;return e.forEach(e=>{t.has(e.id)?t.get(e.id).score+=e.score:t.set(e.id,e)}),Array.from(t.values())}sortResults(e,t){switch(t){case"relevance":return e.sort((e,t)=>t.score-e.score);case"date":return e.sort((e,t)=>new Date(t.metadata.updated)-new Date(e.metadata.updated));case"alphabetical":return e.sort((e,t)=>e.title.localeCompare(t.title));default:return e}}indexItem(e){this.index.set(e.id,e);this.extractTerms(e).forEach(t=>{this.termIndex.has(t)||this.termIndex.set(t,new Set),this.termIndex.get(t).add(e.id)})}extractTerms(e){return`${e.title} ${e.content}`.toLowerCase().match(/\b\w+\b/g)||[]}}class FilterEngine{async initialize(){console.log("Initializing Filter Engine...")}async apply(e,t={}){return t&&0!==Object.keys(t).length?e.filter(e=>this.matchesFilters(e,t)):e}matchesFilters(e,t){for(const[r,i]of Object.entries(t))if(!this.matchesFilter(e,r,i))return!1;return!0}matchesFilter(e,t,r){const i=e.searchableFields[t]||e.data[t];return Array.isArray(r)?r.includes(i):"object"==typeof r&&r.range?this.matchesRange(i,r.range):i===r}matchesRange(e,t){return!(void 0!==t.min&&e<t.min)&&!(void 0!==t.max&&e>t.max)}}class NLPSearchProcessor{async initialize(){console.log("Initializing NLP Search Processor..."),this.stopWords=new Set(["the","a","an","and","or","but","in","on","at","to","for","of","with","by"])}async process(e){const t=this.cleanQuery(e);return{original:e,cleaned:t,terms:this.extractTerms(t),filters:this.extractFilters(e),operators:this.extractOperators(e)}}cleanQuery(e){return e.toLowerCase().replace(/[^\w\s:]/g," ").replace(/\s+/g," ").trim()}extractTerms(e){return e.split(/\s+/).filter(e=>e.length>2&&!this.stopWords.has(e)&&!e.includes(":"))}extractFilters(e){const t={},r=e.match(/(\w+):(\w+)/g);return r&&r.forEach(e=>{const[r,i]=e.split(":");t[r]=i}),t}extractOperators(e){const t=[];return e.includes(" AND ")&&t.push("AND"),e.includes(" OR ")&&t.push("OR"),e.includes(" NOT ")&&t.push("NOT"),t}}class SearchIndexer{constructor(){this.index=new Map,this.termFrequency=new Map}async initialize(){console.log("Initializing Search Indexer...")}async buildIndex(e){this.index.clear(),this.termFrequency.clear(),e.forEach(e=>{this.indexItem(e)}),console.log(`Indexed ${e.length} items`)}indexItem(e){this.index.set(e.id,e);this.extractAllTerms(e).forEach(e=>{this.termFrequency.set(e,(this.termFrequency.get(e)||0)+1)})}extractAllTerms(e){return[e.title,e.content,...Object.values(e.searchableFields)].join(" ").toLowerCase().match(/\b\w+\b/g)||[]}async getTerms(e){const t=[];for(const[r,i]of this.termFrequency.entries())r.startsWith(e.toLowerCase())&&i>1&&t.push(r);return t.sort((e,t)=>this.termFrequency.get(t)-this.termFrequency.get(e)).slice(0,10)}getIndex(){return this.index}}class SearchCache{constructor(){this.cache=new Map,this.maxSize=1e3,this.ttl=3e5}async initialize(){console.log("Initializing Search Cache..."),this.startCleanupTask()}generateKey(e,t){return btoa(JSON.stringify({query:e,options:t}))}async get(e){const t=this.cache.get(e);return t?Date.now()-t.timestamp>this.ttl?(this.cache.delete(e),null):t.data:null}async set(e,t){this.cache.size>=this.maxSize&&this.evictOldest(),this.cache.set(e,{data:t,timestamp:Date.now()})}evictOldest(){const e=this.cache.keys().next().value;e&&this.cache.delete(e)}startCleanupTask(){setInterval(()=>{const e=Date.now();for(const[t,r]of this.cache.entries())e-r.timestamp>this.ttl&&this.cache.delete(t)},6e4)}}class SearchAnalytics{constructor(){this.searches=[],this.queries=new Map,this.errors=[]}async initialize(){console.log("Initializing Search Analytics...")}async recordSearch(e,t,r,i){this.searches.push({id:e,query:t,resultCount:r.length,cached:i,timestamp:new Date}),this.queries.set(t,(this.queries.get(t)||0)+1),this.searches.length>1e4&&(this.searches=this.searches.slice(-5e3))}async recordError(e,t,r){this.errors.push({id:e,query:t,error:r.message,timestamp:new Date})}async getCommonQueries(){return Array.from(this.queries.entries()).sort(([,e],[,t])=>t-e).slice(0,10).map(([e])=>e)}getSearchStats(){const e=this.searches.length,t=this.searches.filter(e=>e.cached).length;return{totalSearches:e,cachedSearches:t,cacheHitRate:e>0?t/e:0,errorRate:this.errors.length/e,averageResults:this.searches.reduce((e,t)=>e+t.resultCount,0)/e}}}"undefined"!=typeof module&&module.exports&&(module.exports={SearchSystem:SearchSystem,SearchEngine:SearchEngine,FilterEngine:FilterEngine,NLPSearchProcessor:NLPSearchProcessor,SearchIndexer:SearchIndexer,SearchCache:SearchCache,SearchAnalytics:SearchAnalytics});