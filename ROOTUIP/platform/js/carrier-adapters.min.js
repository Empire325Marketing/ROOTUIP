class BaseCarrierAdapter{constructor(e){this.name=e.name,this.carrierId=e.carrierId,this.baseUrl=e.baseUrl,this.rateLimits=e.rateLimits||{maxRequests:100,windowMs:6e4,maxBurst:10},this.supportedTypes=e.supportedTypes||["api"]}async testConnection(e,t){try{switch(t){case"api":return await this.testAPIConnection(e);case"edi":return await this.testEDIConnection(e);case"email":return await this.testEmailConnection(e);case"web":return await this.testWebConnection(e);default:return{success:!1,error:"Unsupported connection type"}}}catch(e){return{success:!1,error:e.message}}}async healthCheck(e){return this.testConnection(e,"api")}async fetchViaAPI(e,t,a){throw new Error("fetchViaAPI must be implemented by carrier adapter")}async testAPIConnection(e){throw new Error("testAPIConnection must be implemented by carrier adapter")}async fetchViaEDI(e,t,a){throw new Error("EDI not implemented for this carrier")}async testEDIConnection(e){return{success:!1,error:"EDI not supported"}}async fetchViaEmail(e,t,a){throw new Error("Email integration not implemented for this carrier")}async testEmailConnection(e){return{success:!1,error:"Email integration not supported"}}async fetchViaWeb(e,t,a){throw new Error("Web scraping not implemented for this carrier")}async testWebConnection(e){return{success:!1,error:"Web scraping not supported"}}async processManualUpload(e){const t=await this.performOCR(e);return await this.parseOCRText(t)}async performOCR(e){return console.log("Performing OCR on file:",e.name),new Promise(e=>{setTimeout(()=>{e("\n                    Container: MSKU1234567\n                    Status: In Transit\n                    Vessel: Maersk Eindhoven\n                    ETA: 2024-03-25\n                    Port: Los Angeles\n                ")},1e3)})}async parseOCRText(e){const t=e.split("\n").map(e=>e.trim()).filter(e=>e),a={};return t.forEach(e=>{const[t,s]=e.split(":").map(e=>e.trim());t&&s&&(a[t.toLowerCase()]=s)}),[{containerNumber:a.container,status:a.status,vessel:a.vessel,eta:a.eta,location:a.port}]}async makeRequest(e,t={}){const a=new AbortController,s=setTimeout(()=>a.abort(),3e4);try{const r=await fetch(e,{...t,signal:a.signal});if(clearTimeout(s),!r.ok)throw new Error(`HTTP ${r.status}: ${r.statusText}`);return await r.json()}catch(e){if(clearTimeout(s),"AbortError"===e.name)throw new Error("Request timeout");throw e}}}class MaerskAdapter extends BaseCarrierAdapter{constructor(){super({name:"Maersk",carrierId:"maersk",baseUrl:"https://api.maersk.com/v1",supportedTypes:["api","edi"],rateLimits:{maxRequests:300,windowMs:6e4,maxBurst:20}})}async testAPIConnection(e){try{await this.makeRequest(`${this.baseUrl}/auth/validate`,{method:"POST",headers:{Authorization:`Bearer ${e.apiKey}`,"Consumer-Key":e.consumerKey}});return{success:!0,message:"Connection successful"}}catch(e){return{success:!1,error:e.message}}}async fetchViaAPI(e,t,a){const s={containers:"/tracking/containers",bookings:"/bookings",schedules:"/schedules",invoices:"/invoices"}[t];if(!s)throw new Error(`Unsupported data type: ${t}`);const r=new URL(`${this.baseUrl}${s}`);a.containerNumbers&&r.searchParams.append("containerNumbers",a.containerNumbers.join(",")),a.bookingNumber&&r.searchParams.append("bookingNumber",a.bookingNumber),a.dateFrom&&r.searchParams.append("dateFrom",a.dateFrom),a.dateTo&&r.searchParams.append("dateTo",a.dateTo);const n=await this.makeRequest(r.toString(),{headers:{Authorization:`Bearer ${e.apiKey}`,"Consumer-Key":e.consumerKey,Accept:"application/json"}});return this.transformMaerskData(n,t)}transformMaerskData(e,t){return"containers"===t?e.containers.map(e=>({containerNumber:e.containerNumber,status:e.statusCode,location:e.lastKnownLocation,vessel:e.vessel?.name,voyage:e.voyage,eta:e.estimatedTimeOfArrival,etd:e.estimatedTimeOfDeparture,events:e.events?.map(e=>({timestamp:e.eventDateTime,description:e.eventDescription,location:e.location}))})):e}async fetchViaEDI(e,t,a){console.log("Fetching via EDI for Maersk");const s=await this.connectToEDI(e),r=await this.fetchEDIMessages(s,t);return this.parseEDIMessages(r)}async connectToEDI(e){return{host:e.ediHost,port:e.ediPort,username:e.ediUsername,connected:!0}}async fetchEDIMessages(e,t){return["UNB+UNOC:3+MAERSK+CUSTOMER+240315:1200+1234567890'\n            UNH+1+IFTSTA:D:95B:UN:EAN007'\n            BGM+340+ABC123+9'\n            DTM+137:202403151200:203'\n            NAD+CZ+MAERSK:160:ZZZ'\n            EQD+CN+MSKU1234567+45G1:102:5'\n            LOC+147+USLAX:139:6'\n            STS+1+21::ZZZ'\n            UNT+8+1'\n            UNZ+1+1234567890'"]}parseEDIMessages(e){return e.map(e=>{const t=e.split("\n"),a={};return t.forEach(e=>{if(e.startsWith("EQD+CN+")){const t=e.split("+");a.containerNumber=t[2]}if(e.startsWith("LOC+")){const t=e.split("+");a.location=t[2].split(":")[0]}if(e.startsWith("STS+")){const t=e.split("+");a.status=t[1]}}),a})}}class MSCAdapter extends BaseCarrierAdapter{constructor(){super({name:"MSC",carrierId:"msc",baseUrl:"https://api.msc.com/api/v1",supportedTypes:["api","edi","web"],rateLimits:{maxRequests:200,windowMs:6e4,maxBurst:15}})}async testAPIConnection(e){try{return{success:!0,token:(await this.makeRequest(`${this.baseUrl}/auth`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e.username,password:e.password,apiKey:e.apiKey})})).token}}catch(e){return{success:!1,error:e.message}}}async fetchViaAPI(e,t,a){const s=await this.testAPIConnection(e);if(!s.success)throw new Error("Authentication failed");const r=await this.makeRequest(`${this.baseUrl}${{containers:"/cargo/tracking",bookings:"/bookings/list",schedules:"/schedules/search"}[t]}`,{method:"POST",headers:{Authorization:`Bearer ${s.token}`,"Content-Type":"application/json"},body:JSON.stringify(a)});return this.transformMSCData(r,t)}transformMSCData(e,t){return"containers"===t?e.trackingResults.map(e=>({containerNumber:e.equipmentNumber,status:this.mapMSCStatus(e.lastStatus),location:e.currentLocation,vessel:e.vesselName,voyage:e.voyageNumber,eta:e.eta,pol:e.portOfLoading,pod:e.portOfDischarge})):e}mapMSCStatus(e){return{"Empty to Shipper":"EMPTY","Gate In":"GATE_IN",Loaded:"LOADED",Discharged:"DISCHARGED","Gate Out":"GATE_OUT","Empty Return":"EMPTY_RETURN"}[e]||e}async fetchViaWeb(e,t,a){console.log("Web scraping MSC portal");const s=await this.launchBrowser(),r=await s.newPage();try{await r.goto("https://www.msc.com/track-a-shipment"),await r.type("#username",e.username),await r.type("#password",e.password),await r.click("#loginButton"),await r.waitForNavigation(),await r.goto("https://www.msc.com/mycontainers");return await r.evaluate(()=>{const e=[];return document.querySelectorAll(".container-row").forEach(t=>{e.push({containerNumber:t.querySelector(".container-id").textContent,status:t.querySelector(".status").textContent,location:t.querySelector(".location").textContent,eta:t.querySelector(".eta").textContent})}),e})}finally{await s.close()}}async launchBrowser(){return{newPage:async()=>({goto:async e=>console.log("Navigating to:",e),type:async(e,t)=>console.log("Typing:",t),click:async e=>console.log("Clicking:",e),waitForNavigation:async()=>console.log("Waiting for navigation"),evaluate:async e=>[{containerNumber:"MSCU1234567",status:"In Transit",location:"Singapore",eta:"2024-03-28"}]}),close:async()=>console.log("Browser closed")}}}class CMACGMAdapter extends BaseCarrierAdapter{constructor(){super({name:"CMA CGM",carrierId:"cma-cgm",baseUrl:"https://api.cma-cgm.com/v1",supportedTypes:["api","email"],rateLimits:{maxRequests:250,windowMs:6e4,maxBurst:25}})}async testAPIConnection(e){try{return{success:"ok"===(await this.makeRequest(`${this.baseUrl}/ping`,{headers:{"X-API-Key":e.apiKey,"X-Customer-Code":e.customerCode}})).status}}catch(e){return{success:!1,error:e.message}}}async fetchViaAPI(e,t,a){const s=await this.makeRequest(`${this.baseUrl}${{containers:"/container/tracking",bookings:"/booking/search",schedules:"/schedule/search",quotes:"/quote/search"}[t]}`,{method:"POST",headers:{"X-API-Key":e.apiKey,"X-Customer-Code":e.customerCode,"Content-Type":"application/json"},body:JSON.stringify({...a,customerCode:e.customerCode})});return this.transformCMACGMData(s,t)}transformCMACGMData(e,t){return"containers"===t?e.containers.map(e=>({containerNumber:e.containerReference,status:e.lastEvent?.status,location:e.lastEvent?.location,vessel:e.vesselName,voyage:e.voyageReference,eta:e.estimatedArrival,lastUpdate:e.lastEvent?.eventDate,route:e.route?.map(e=>({from:e.departurePort,to:e.arrivalPort,vessel:e.vesselName,etd:e.etd,eta:e.eta}))})):e}async fetchViaEmail(e,t,a){console.log("Fetching CMA CGM data via email");const s=await this.fetchEmails(e);return this.parseContainerEmails(s)}async fetchEmails(e){return[{subject:"Container Status Update - CMAU1234567",from:"noreply@cma-cgm.com",date:new Date,body:"\n                    Dear Customer,\n                    \n                    Your container CMAU1234567 has been updated:\n                    \n                    Status: Discharged\n                    Location: Port of Los Angeles\n                    Date: 2024-03-15 14:30\n                    Vessel: CMA CGM BENJAMIN FRANKLIN\n                    \n                    Thank you for choosing CMA CGM.\n                "}]}parseContainerEmails(e){return e.map(e=>{const t=e.subject.match(/([A-Z]{4}\d{7})/),a=e.body.match(/Status:\s*(.+)/),s=e.body.match(/Location:\s*(.+)/),r=e.body.match(/Vessel:\s*(.+)/);return{containerNumber:t?.[1],status:a?.[1]?.trim(),location:s?.[1]?.trim(),vessel:r?.[1]?.trim(),emailDate:e.date,source:"email"}}).filter(e=>e.containerNumber)}}class HapagLloydAdapter extends BaseCarrierAdapter{constructor(){super({name:"Hapag-Lloyd",carrierId:"hapag-lloyd",baseUrl:"https://api.hapag-lloyd.com/v2",supportedTypes:["api","web"],rateLimits:{maxRequests:150,windowMs:6e4,maxBurst:10}})}async testAPIConnection(e){try{return{success:!0,token:await this.getAuthToken(e)}}catch(e){return{success:!1,error:e.message}}}async getAuthToken(e){return(await this.makeRequest(`${this.baseUrl}/oauth/token`,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"client_credentials",client_id:e.clientId,client_secret:e.clientSecret})})).access_token}async fetchViaAPI(e,t,a){const s=await this.getAuthToken(e),r=new URL(`${this.baseUrl}${{containers:"/tracking/container",bookings:"/booking",schedules:"/schedule/port-to-port"}[t]}`);Object.entries(a).forEach(([e,t])=>{t&&r.searchParams.append(e,t)});const n=await this.makeRequest(r.toString(),{headers:{Authorization:`Bearer ${s}`,Accept:"application/json"}});return this.transformHapagLloydData(n,t)}transformHapagLloydData(e,t){return"containers"===t?e.data.map(e=>({containerNumber:e.equipmentNumber,status:e.transportStatus,location:e.currentLocation,vessel:e.currentVessel,voyage:e.currentVoyage,eta:e.predictedTimeOfArrival,pod:e.placeOfDelivery,events:e.transportEvents?.map(e=>({timestamp:e.eventDateTime,status:e.transportEventTypeCode,location:e.location}))})):e}}class ONEAdapter extends BaseCarrierAdapter{constructor(){super({name:"ONE",carrierId:"one",baseUrl:"https://api.one-line.com/v1",supportedTypes:["api"],rateLimits:{maxRequests:100,windowMs:6e4,maxBurst:5}})}async testAPIConnection(e){try{return{success:!0===(await this.makeRequest(`${this.baseUrl}/auth/validate`,{method:"GET",headers:{"API-Key":e.apiKey,"Customer-ID":e.customerId}})).valid}}catch(e){return{success:!1,error:e.message}}}async fetchViaAPI(e,t,a){const s=await this.makeRequest(`${this.baseUrl}${{containers:"/cargo-tracking",bookings:"/bookings",invoices:"/invoices"}[t]}`,{method:"POST",headers:{"API-Key":e.apiKey,"Customer-ID":e.customerId,"Content-Type":"application/json"},body:JSON.stringify(a)});return this.transformONEData(s,t)}transformONEData(e,t){return"containers"===t?e.cargoTrackingList.map(e=>({containerNumber:e.containerNo,status:e.statusNm,location:e.placeNm,vessel:e.vslEngNm,voyage:e.voyNo,eta:e.eta,etd:e.etd,pol:e.polNm,pod:e.podNm})):e}}class GenericCarrierAdapter extends BaseCarrierAdapter{constructor(e){super(e),this.authConfig=e.auth,this.endpoints=e.endpoints,this.transformers=e.transformers}async testAPIConnection(e){try{const t=await this.buildAuthHeaders(e);return{success:!0,response:await this.makeRequest(`${this.baseUrl}${this.endpoints.test||"/ping"}`,{headers:t})}}catch(e){return{success:!1,error:e.message}}}async buildAuthHeaders(e){const t={};switch(this.authConfig.type){case"bearer":t.Authorization=`Bearer ${e[this.authConfig.tokenField||"apiKey"]}`;break;case"apikey":t[this.authConfig.headerName||"X-API-Key"]=e[this.authConfig.keyField||"apiKey"];break;case"basic":const a=btoa(`${e.username}:${e.password}`);t.Authorization=`Basic ${a}`;break;case"custom":Object.entries(this.authConfig.headers).forEach(([a,s])=>{t[a]=e[s]||s})}return t}async fetchViaAPI(e,t,a){const s=this.endpoints[t];if(!s)throw new Error(`No endpoint configured for data type: ${t}`);const r=await this.buildAuthHeaders(e),n=await this.makeRequest(`${this.baseUrl}${s}`,{method:s.method||"GET",headers:{...r,"Content-Type":"application/json"},body:"POST"===s.method?JSON.stringify(a):void 0});return this.transformData(n,t)}transformData(e,t){const a=this.transformers[t];if(!a)return e;if("function"==typeof a)return a(e);const s=this.getNestedValue(e,a.root||"");return Array.isArray(s)?s.map(e=>this.mapFields(e,a.fields)):[this.mapFields(s,a.fields)]}mapFields(e,t){const a={};return Object.entries(t).forEach(([t,s])=>{a[t]=this.getNestedValue(e,s)}),a}getNestedValue(e,t){return t?t.split(".").reduce((e,t)=>e&&void 0!==e[t]?e[t]:null,e):e}}class EvergreenAdapter extends GenericCarrierAdapter{constructor(){super({name:"Evergreen",carrierId:"evergreen",baseUrl:"https://api.evergreen-marine.com/v1",supportedTypes:["api"],auth:{type:"apikey",headerName:"X-API-Key"},endpoints:{test:"/health",containers:"/shipments/track",schedules:"/schedules"},transformers:{containers:{root:"shipments",fields:{containerNumber:"containerNo",status:"status",location:"currentLocation",vessel:"vesselName",voyage:"voyageNo",eta:"eta"}}}})}}class COSCOAdapter extends GenericCarrierAdapter{constructor(){super({name:"COSCO",carrierId:"cosco",baseUrl:"https://api.cosco.com/service/v1",supportedTypes:["api","edi"],auth:{type:"custom",headers:{"App-Key":"appKey","App-Secret":"appSecret"}},endpoints:{test:"/system/ping",containers:"/cargo/tracking",bookings:"/booking/query"},transformers:{containers:e=>e.data.trackingInfo.map(e=>({containerNumber:e.cntrNo,status:e.cntrStatus,location:e.location,vessel:e.vslName,voyage:e.voyage,eta:e.eta,movement:e.cntrMovement}))}})}}class YangMingAdapter extends GenericCarrierAdapter{constructor(){super({name:"Yang Ming",carrierId:"yang-ming",baseUrl:"https://api.yangming.com/open/v1",supportedTypes:["api"],auth:{type:"bearer"},endpoints:{test:"/auth/verify",containers:"/tracking/container",schedules:"/schedule/search"},transformers:{containers:{root:"result.containers",fields:{containerNumber:"cntrNo",status:"statusDesc",location:"locationName",vessel:"vesselName",voyage:"voyageNo",eta:"etaDate"}}}})}}class ZIMAdapter extends GenericCarrierAdapter{constructor(){super({name:"ZIM",carrierId:"zim",baseUrl:"https://api.zim.com/v1",supportedTypes:["api","web"],auth:{type:"apikey",headerName:"Ocp-Apim-Subscription-Key"},endpoints:{test:"/health/ping",containers:"/tracking/trackunits",bookings:"/booking/bookings"},transformers:{containers:e=>e.TrackedUnits.map(e=>({containerNumber:e.ContainerNumber,status:e.LastStatus,location:e.LastLocation,vessel:e.VesselName,voyage:e.VoyageNumber,eta:e.EstimatedArrival,lastEvent:{date:e.LastEventDate,description:e.LastEventDescription}}))}})}}class HMMAdapter extends GenericCarrierAdapter{constructor(){super({name:"HMM (Hyundai Merchant Marine)",carrierId:"hmm",baseUrl:"https://api.hmm21.com/api/v1",supportedTypes:["api"],auth:{type:"custom",headers:{Authorization:"apiKey","User-Agent":"userAgent"}},endpoints:{test:"/common/health",containers:"/cargo/tracking",bookings:"/booking/list"},transformers:{containers:{root:"data",fields:{containerNumber:"cntrNo",status:"cntrSts",location:"locNm",vessel:"vslEngNm",voyage:"voyNo",eta:"eta",pol:"polNm",pod:"podNm"}}}})}}"undefined"!=typeof module&&module.exports&&(module.exports={BaseCarrierAdapter:BaseCarrierAdapter,MaerskAdapter:MaerskAdapter,MSCAdapter:MSCAdapter,CMACGMAdapter:CMACGMAdapter,HapagLloydAdapter:HapagLloydAdapter,ONEAdapter:ONEAdapter,GenericCarrierAdapter:GenericCarrierAdapter,EvergreenAdapter:EvergreenAdapter,COSCOAdapter:COSCOAdapter,YangMingAdapter:YangMingAdapter,ZIMAdapter:ZIMAdapter,HMMAdapter:HMMAdapter});