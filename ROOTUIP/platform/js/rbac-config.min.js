const RBAC={permissions:{DASHBOARD_VIEW:"dashboard.view",DASHBOARD_EXECUTIVE:"dashboard.executive",CONTAINERS_VIEW:"containers.view",CONTAINERS_EDIT:"containers.edit",CONTAINERS_DELETE:"containers.delete",CONTAINERS_BULK_ACTIONS:"containers.bulk_actions",DD_VIEW:"dd.view",DD_PREVENT:"dd.prevent",DD_DISPUTE:"dd.dispute",DD_APPROVE:"dd.approve",INTEGRATIONS_VIEW:"integrations.view",INTEGRATIONS_EDIT:"integrations.edit",INTEGRATIONS_API_KEYS:"integrations.api_keys",ANALYTICS_VIEW:"analytics.view",ANALYTICS_EXPORT:"analytics.export",ANALYTICS_CUSTOM_REPORTS:"analytics.custom_reports",USERS_VIEW:"users.view",USERS_EDIT:"users.edit",USERS_DELETE:"users.delete",USERS_ROLES:"users.roles",SETTINGS_VIEW:"settings.view",SETTINGS_EDIT:"settings.edit",SETTINGS_BILLING:"settings.billing",SETTINGS_SECURITY:"settings.security",DOCUMENTS_VIEW:"documents.view",DOCUMENTS_UPLOAD:"documents.upload",DOCUMENTS_DELETE:"documents.delete",DOCUMENTS_OCR:"documents.ocr",API_READ:"api.read",API_WRITE:"api.write",API_DELETE:"api.delete",AUDIT_VIEW:"audit.view",AUDIT_EXPORT:"audit.export"},roles:{SUPER_ADMIN:{name:"Super Administrator",description:"Full system access with all permissions",permissions:["*"],level:100},ADMIN:{name:"Administrator",description:"Administrative access with user management",permissions:["dashboard.*","containers.*","dd.*","integrations.*","analytics.*","users.*","settings.view","settings.edit","documents.*","api.*","audit.view"],level:90},MANAGER:{name:"Operations Manager",description:"Manage operations and approve actions",permissions:["dashboard.view","dashboard.executive","containers.*","dd.*","integrations.view","analytics.*","users.view","settings.view","documents.*","api.read","api.write","audit.view"],level:70},ANALYST:{name:"Data Analyst",description:"View and analyze data, generate reports",permissions:["dashboard.view","containers.view","dd.view","integrations.view","analytics.*","documents.view","api.read","audit.view"],level:50},OPERATOR:{name:"Operations Staff",description:"Daily operations and container management",permissions:["dashboard.view","containers.view","containers.edit","dd.view","dd.prevent","dd.dispute","documents.view","documents.upload","api.read"],level:30},VIEWER:{name:"Read-Only User",description:"View-only access to dashboards and reports",permissions:["dashboard.view","containers.view","dd.view","analytics.view","documents.view"],level:10},API_USER:{name:"API User",description:"Programmatic access via API",permissions:["api.read","api.write","containers.view","dd.view","analytics.view"],level:20}},customRoles:{},hasPermission(e,s){const i=this.roles[e]||this.customRoles[e];if(!i)return!1;if(i.permissions.includes("*"))return!0;if(i.permissions.includes(s))return!0;const t=s.split(".")[0];return!!i.permissions.includes(`${t}.*`)},hasAllPermissions(e,s){return s.every(s=>this.hasPermission(e,s))},hasAnyPermission(e,s){return s.some(s=>this.hasPermission(e,s))},getPermissionLevel(e){const s=this.roles[e]||this.customRoles[e];return s?s.level:0},createCustomRole(e,s,i,t,r){this.customRoles[e]={name:s,description:i,permissions:t,level:Math.min(r,89)},this.saveCustomRoles()},updateCustomRole(e,s){this.customRoles[e]&&(Object.assign(this.customRoles[e],s),s.level&&(this.customRoles[e].level=Math.min(s.level,89)),this.saveCustomRoles())},deleteCustomRole(e){delete this.customRoles[e],this.saveCustomRoles()},saveCustomRoles(){localStorage.setItem("uip_custom_roles",JSON.stringify(this.customRoles))},loadCustomRoles(){const e=localStorage.getItem("uip_custom_roles");e&&(this.customRoles=JSON.parse(e))},getAllRoles(){return{...this.roles,...this.customRoles}},getRole(e){return this.roles[e]||this.customRoles[e]},getRolePermissions(e){const s=this.getRole(e);if(!s)return[];if(s.permissions.includes("*"))return Object.values(this.permissions);const i=[];return s.permissions.forEach(e=>{if(e.endsWith(".*")){const s=e.replace(".*","");Object.entries(this.permissions).forEach(([e,t])=>{t.startsWith(s+".")&&i.push(t)})}else i.push(e)}),[...new Set(i)]},canManageRole(e,s){return this.getPermissionLevel(e)>this.getPermissionLevel(s)&&this.hasPermission(e,"users.roles")},init(){this.loadCustomRoles(),window.checkPermission=e=>{const s=this.getCurrentUser();return this.hasPermission(s.role,e)},window.requirePermission=e=>{if(!window.checkPermission(e))throw new Error(`Permission denied: ${e}`)}},getCurrentUser(){const e=localStorage.getItem("uip_current_user");return e?JSON.parse(e):null},setCurrentUser(e){localStorage.setItem("uip_current_user",JSON.stringify(e))},clearCurrentUser(){localStorage.removeItem("uip_current_user")}};"undefined"!=typeof module&&module.exports&&(module.exports=RBAC),document.addEventListener("DOMContentLoaded",()=>{RBAC.init()});