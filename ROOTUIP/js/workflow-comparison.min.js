class WorkflowComparison{constructor(){this.scenarios={dd_charge:{title:"Detention & Demurrage Charge Detection",manual:{steps:[{icon:"📧",time:"Day 1-3",title:"Email Arrives",details:"D&D invoice buried in inbox with 50 other emails"},{icon:"👀",time:"Day 4-7",title:"Manual Review",details:"Team member eventually finds and reviews charge"},{icon:"📊",time:"Day 8-10",title:"Spreadsheet Entry",details:"Manual data entry, often with errors"},{icon:"⚠️",time:"Day 11-14",title:"Dispute Window Closes",details:"Too late to file dispute, charge becomes final"}],metrics:{time:"14 days",success:"33%",cost:"$14,200",effort:"8 hours"}},automated:{steps:[{icon:"🤖",time:"0 min",title:"AI Detection",details:"UIP instantly detects D&D charge from any source"},{icon:"🔍",time:"1 min",title:"Root Cause Analysis",details:"AI identifies carrier delay as cause"},{icon:"📄",time:"2 min",title:"Dispute Filed",details:"Automated dispute with evidence submitted"},{icon:"✅",time:"3 min",title:"Confirmation",details:"Team notified, dispute tracked automatically"}],metrics:{time:"3 min",success:"94%",cost:"$890",effort:"0 hours"}}},container_tracking:{title:"Multi-Carrier Container Tracking",manual:{steps:[{icon:"🔐",time:"9:00 AM",title:"Log into Carrier Portal",details:"Access first of 12 different carrier websites"},{icon:"🔍",time:"9:15 AM",title:"Search Containers",details:"Manual search for each container number"},{icon:"📝",time:"10:30 AM",title:"Copy to Spreadsheet",details:"Manual copy/paste of status updates"},{icon:"🔄",time:"2:00 PM",title:"Repeat Process",details:"Do this for all 12 carriers daily"}],metrics:{time:"5 hours/day",accuracy:"76%",visibility:"Once daily",coverage:"60%"}},automated:{steps:[{icon:"🔌",time:"Real-time",title:"API Connection",details:"All carriers connected automatically"},{icon:"📡",time:"24/7",title:"Continuous Sync",details:"Updates every 5 minutes from all sources"},{icon:"🎯",time:"Instant",title:"Smart Alerts",details:"AI alerts on delays or issues"},{icon:"📊",title:"Unified Dashboard",details:"All containers in one view, always current"}],metrics:{time:"0 hours",accuracy:"99.9%",visibility:"Real-time",coverage:"100%"}}},dispute_management:{title:"Dispute Filing & Management",manual:{steps:[{icon:"📚",time:"2 hours",title:"Research Contracts",details:"Find relevant terms and conditions"},{icon:"📧",time:"1 hour",title:"Gather Evidence",details:"Search emails, documents, tracking data"},{icon:"✍️",time:"1 hour",title:"Draft Dispute",details:"Write dispute letter with evidence"},{icon:"📤",time:"30 min",title:"Submit & Track",details:"Email dispute, hope for response"}],metrics:{time:"4.5 hours",success:"67%",response:"14 days",tracking:"Manual"}},automated:{steps:[{icon:"🧠",time:"Instant",title:"AI Analysis",details:"Contract terms automatically applied"},{icon:"🔗",time:"Automatic",title:"Evidence Compiled",details:"All relevant data auto-attached"},{icon:"🚀",time:"1 min",title:"Submit via API",details:"Direct submission to carrier systems"},{icon:"📈",time:"Real-time",title:"Track Progress",details:"Automated follow-ups and escalations"}],metrics:{time:"1 min",success:"94%",response:"3 days",tracking:"Automated"}}}}}init(e){this.container=document.getElementById(e),this.container&&(this.render(),this.attachEventListeners())}render(){this.container.innerHTML=`\n            <div class="workflow-comparison">\n                <div class="comparison-header">\n                    <h3>See the Difference: Manual vs UIP Automated</h3>\n                    <div class="comparison-toggle">\n                        ${Object.keys(this.scenarios).map((e,t)=>`\n                            <button class="toggle-btn ${0===t?"active":""}" data-scenario="${e}">\n                                ${this.scenarios[e].title}\n                            </button>\n                        `).join("")}\n                    </div>\n                </div>\n                \n                <div class="workflow-display">\n                    ${Object.keys(this.scenarios).map((e,t)=>this.renderScenario(e,0===t)).join("")}\n                </div>\n            </div>\n        `}renderScenario(e,t){const i=this.scenarios[e];return`\n            <div class="workflow-scenario ${t?"active":""}" data-scenario="${e}">\n                <div class="scenario-comparison">\n                    <div class="manual-workflow">\n                        <h4>❌ Current Manual Process</h4>\n                        <div class="workflow-steps">\n                            ${i.manual.steps.map((e,t)=>`\n                                <div class="workflow-step manual" style="animation-delay: ${.1*t}s">\n                                    <div class="step-header">\n                                        <div class="step-icon">${e.icon}</div>\n                                        <span class="step-time">${e.time}</span>\n                                    </div>\n                                    <div class="step-content">\n                                        <h4>${e.title}</h4>\n                                        <p class="step-details">${e.details}</p>\n                                    </div>\n                                </div>\n                            `).join("")}\n                        </div>\n                        <div class="workflow-metrics">\n                            ${Object.entries(i.manual.metrics).map(([e,t])=>`\n                                <div class="metric-card negative">\n                                    <span class="metric-value">${t}</span>\n                                    <span class="metric-label">${this.formatMetricLabel(e)}</span>\n                                </div>\n                            `).join("")}\n                        </div>\n                    </div>\n                    \n                    <div class="vs-divider">\n                        <span>VS</span>\n                    </div>\n                    \n                    <div class="automated-workflow">\n                        <h4>✅ UIP Automated Process</h4>\n                        <div class="workflow-steps">\n                            ${i.automated.steps.map((e,t)=>`\n                                <div class="workflow-step automated" style="animation-delay: ${.1*t+.5}s">\n                                    <div class="step-header">\n                                        <div class="step-icon">${e.icon}</div>\n                                        <span class="step-time">${e.time||"Instant"}</span>\n                                    </div>\n                                    <div class="step-content">\n                                        <h4>${e.title}</h4>\n                                        <p class="step-details">${e.details}</p>\n                                    </div>\n                                </div>\n                            `).join("")}\n                        </div>\n                        <div class="workflow-metrics">\n                            ${Object.entries(i.automated.metrics).map(([e,t])=>`\n                                <div class="metric-card positive">\n                                    <span class="metric-value">${t}</span>\n                                    <span class="metric-label">${this.formatMetricLabel(e)}</span>\n                                </div>\n                            `).join("")}\n                        </div>\n                    </div>\n                </div>\n                \n                <div class="workflow-impact">\n                    <div class="impact-summary">\n                        <h4>Bottom Line Impact</h4>\n                        <p>${this.calculateImpact(i)}</p>\n                    </div>\n                </div>\n            </div>\n        `}formatMetricLabel(e){return{time:"Time Required",success:"Success Rate",cost:"Cost per Incident",effort:"Manual Effort",accuracy:"Data Accuracy",visibility:"Update Frequency",coverage:"Carrier Coverage",response:"Response Time",tracking:"Tracking Method"}[e]||e}calculateImpact(e){return e.title.includes("Detention")?"Save $13,310 per charge and prevent 87% of charges from occurring":e.title.includes("Tracking")?"Save 25 hours per week and achieve 100% real-time visibility":e.title.includes("Dispute")?"Increase dispute success from 67% to 94% with zero manual effort":void 0}attachEventListeners(){this.container.querySelectorAll(".toggle-btn").forEach(e=>{e.addEventListener("click",e=>{this.switchScenario(e.target.dataset.scenario)})})}switchScenario(e){this.container.querySelectorAll(".toggle-btn").forEach(t=>{t.classList.toggle("active",t.dataset.scenario===e)}),this.container.querySelectorAll(".workflow-scenario").forEach(t=>{t.classList.toggle("active",t.dataset.scenario===e)});const t=this.container.querySelector(`.workflow-scenario[data-scenario="${e}"]`);if(t){t.querySelectorAll(".workflow-step").forEach((e,t)=>{e.style.animation="none",setTimeout(()=>{e.style.animation="slideInUp 0.5s ease forwards",e.style.animationDelay=.1*t+"s"},10)})}}}const workflowComparison=new WorkflowComparison;